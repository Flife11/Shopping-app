{{!-- <style>
    .cartTable tr,
    .totalTable tr,
    .cartTable td,
    .totalTable td,
    .cartTable th,
    .totalTable th {
        background-color: transparent;
    }
</style> --}}

{{> header}}

<div style="margin: 2vw;">
    {{!-- header --}}
    <H3 style="color: #2a6792; ">GIỎ HÀNG</H3>

    {{!-- cart part --}}
    <div style="width: 100%; display:flex; margin:2vw 0vw">
        {{!-- cart --}}
        <div style="width: 65%;" id="cardBox" class="border-top">
            <table class="table cartTable">
                <thead>
                    <tr class="text-center">
                        <th scope="col" style="width: 45%;">Sản phẩm</th>
                        <th scope="col" style="width: 20%;">Số lượng</th>
                        <th scope="col" style="width: 20%;">Số tiền</th>
                        <th scope="col" style="width: 15%;">Thao Tác</th>
                    </tr>
                </thead>
                <tbody>

                    {{!-- data start here --}}


                </tbody>
            </table>
        </div>

        {{!-- space --}}
        <div style="width: 3%;"></div>

        {{!-- total --}}
        <div style="width: 32%; height:2vw;">
            <table class="table totalTable">
                <thead>
                    <tr class="text-center">
                        <th>
                            Tổng tiền: <span id="total" style="color: #2a6792;">0 VNĐ</span>
                        </th>
                    </tr>
                </thead>
                <tbody>

                    <tr>
                        <td class="d-flex justify-content-center">
                            <button class="btn"
                                style="background-image:linear-gradient(to right,#91d1de,#2a6792);color:white;width:70%; border-radius: 100px;font-weight:bold;margin:3vh">
                                Thanh toán
                            </button>
                        </td>

                    </tr>


                </tbody>
            </table>
        </div>
    </div>
</div>


{{> notification_failure}}
{{> notification_success}}

{{> footer}}

<script>
    let total = 0.0;
    let products = [];

    async function getCart() {
        let cart = JSON.parse(localStorage.getItem("cart"));
        if (cart) {
            const res = await fetch(`/cart`, {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(cart)
            });

            const resData = await res.json();

            if (res.ok) {

                products = resData.cart;

                resData.cart.forEach(element => {
                    total += element.price * element.amount;
                });

                $("#total").text(`${total} VNĐ`);
                $("#cardBox tbody").html(resData.cart.map((element) => {
                    return `
                    <tr id=${element.id}>
                        <td>
                            <div style="display: flex;">
                                <img src="/public/image/${element.image}" style="width: 7vw; height: 7vw;">
                                <div style="display: flex; flex-direction: column; justify-content: center;">
                                    <p style="margin-left: 1vw;">${element.name}</p>
                                    <p style="margin-left: 1vw;color:#2a6792">${element.price} VNĐ</p>
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="d-flex justify-content-center align-items-center">
                                <button class="btn" onclick="HandleDecrease(${element.id})"><i class="fa-solid fa-minus"></i></button>
                                <input id="input-${element.id}" type="number" value="${element.amount}" onchange="HandleAmount(${element.id})"; min=0; max=${element.quantity}; style="width: 50%; background-color:transparent" class="form-control">
                                <button class="btn" onclick="HandleIncrease(${element.id})"><i class="fa-solid fa-plus"></i></button>
                            </div>
                        </td>
                        <td class="text-center" id="total-${element.id}">
                            ${element.price * element.amount} VNĐ
                        </td>
                        <td class="text-center">
                            <button class="btn" onclick="HandleRemoveProduct(${element.id})" style="background-color: transparent;"><i class="fa-regular fa-trash-can"></i></button>
                        </td>
                    </tr>
                    `;
                }));

            }
        }
    }

    $(document).ready(async function () {
        getCart();
    });

    //TODO: khi thêm vào giỏ hàng ở product_card, cần ktra có đủ số lượng hay không

    function HandleIncrease(id) {

        let input = $(`#input-${id}`);
        input.val(parseInt(input.val()) + 1);
        input.change();
    }

    function HandleDecrease(id) {
        let input = $(`#input-${id}`);
        input.val(parseInt(input.val()) - 1);
        input.change();
    }

    function HandleRemoveProduct(id){
        let input = $(`#input-${id}`);
        input.val(0);
        input.change();
    }

    function HandleAmount(id) {

        // Note: tất cả cần xử lý : local storage, products, table, total, input-id, total-id


        let inputVal = parseInt($(`#input-${id}`).val());
        let index = products.findIndex((element) => element.id == id);

        if (inputVal < 0) {
            $(`#input-${id}`).val(1);
            inputVal = 1;

        }

        else if (inputVal > products[index].quantity) {
            $(`#input-${id}`).val(products[index].quantity);
            inputVal = products[index].quantity;

        }
        else if (inputVal == 0) {

            $(`#input-${id}`).val(0);
            inputVal = 0;
        }

        // update products
        products[index].amount = inputVal;

        // update local storage
        let cart = JSON.parse(localStorage.getItem("cart"));
        cart = cart.map((element) => {
            if (element.id == id) {
                element.quantity = inputVal;
            }
            return element;
        });
        localStorage.setItem("cart", JSON.stringify(cart));

        // update total for this product only
        $(`#total-${id}`).text(`${products[index].price * inputVal} VNĐ`);

        // update total for all products
        total = 0;
        products.forEach((element) => {
            total += element.price * element.amount;
        });
        $("#total").text(`${total} VNĐ`);

        // remove product if amount = 0
        if (inputVal == 0) {
            $(`#${id}`).remove();

            cart = JSON.parse(localStorage.getItem("cart"));
            cart = cart.filter((element) => element.id != id);
            localStorage.setItem("cart", JSON.stringify(cart));

            products = products.filter((element) => element.id != id);
        }



    }
</script>