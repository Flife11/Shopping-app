{{>header}}

<style>
    #wrapper{
        margin-top: 20px;
        margin-inline: 50px;
        display: flex;
        justify-content: center;
    }
    #container{
        display: flex;
        flex-direction: column;
        max-width: 1200px;
    }
    .block{
        margin-bottom: 10px;
        background-color: white;
    }
    
    .detail_container{
        display: grid;
        grid-template-columns: 50% 50%;
    }
    .col-left img{
        max-width: 100%;
        max-height: 100%;
    }
    .col-right{
        padding: 20px;
        margin-left: 20px;
        display: flex;
        flex-direction: column;
    }
    .col-right p{
        font-size: x-large;
        color: #2a6792;
    }
    .col-right li{
        font-size: large;
    }
    #het_hang{
        background-color: red;
        padding: 10px;
        /*border-radius: 10px;*/
        font-size: 20px;
        text-align: center;
        margin-top: 20px;
        cursor:default;
        color:white;
        font-weight: bold;
    }


    .full_description_container, .suggestion_container{
        padding: 20px;
        background-color: white;
    }
</style>

<div id="wrapper">
    <div id="container">
        {{!-- detail containter --}}
        <div class="detail_container block">
            <div class="col-left">
                <img src="/public/image/{{product.image}}">
            </div>
            <div class="col-right">
                <h2>{{product.name}}</h2>
                <p class="mt-3 mb-1">{{product.price}} VNĐ</p>
                
                <li class="text-body-tertiary mb-0">Số lượng tồn: {{product.quantity}}</li>
                <li class="text-body-tertiary">Mô tả ngắn: {{product.shortdescription}}</li>

                {{#if (equals product.quantity 0)}}
                <div id="het_hang">TẠM HẾT HÀNG</div>
                {{else}}
                <div class="mt-3 mb-3">
                    <label for="quantity" class="mx-2">Số lượng</label>
                    <input type="number" oninput="HandleAmount({{product.quantity}})" id="quantity" name="quantity" min="1" max="{{product.quantity}}" value="1" style="text-align: center;">
                </div>
                <button class="btn" onclick="addCart({{product.id}})" style="background-image:linear-gradient(to right,#91d1de,#2a6792);color:white;width:50%;max-width: 185px;border-radius: 100px">Thêm vào giỏ hàng</button>
                {{/if}}
            </div>
        </div>

        {{!-- full description container --}}
        <div class="full_description_container block">
            <h4>Mô tả chi tiết</h4>
            <p class="text-dark-emphasis">{{product.fulldescription}}</p>
        </div>


        {{!-- suggestion container --}}
        <div class="suggestion_container block">
            <h4>Sản phẩm liên quan</h4>

            {{!-- product box --}}
            <div class="d-flex flex-wrap justify-content-center" style="padding:1vw 2vw 2vw 2vw">
                {{#each suggestProducts}}
                <div style="width: 25%;" class="d-flex justify-content-center mb-3">
                    {{> product_card}}
                </div>
                {{/each}}

                {{!-- pagination --}}
                {{>pagination}}
            </div>
        </div>
    </div>
</div>


{{>notification_failure}}
{{>notification_success}}

{{>footer}}

<script>
    function HandleAmount(quantity){
        let inputVal = parseInt($('#quantity').val());
        if(inputVal > quantity){
            $('#quantity').val(quantity);
        }
        if(inputVal < 1 || isNaN(inputVal)){
            $('#quantity').val(1);
        }

    }

    function addCart(event) {

        // Get order 
        let Itemid = {{product.id}};
        let Quantity = $('#quantity').val();

        const cart = JSON.parse(localStorage.getItem('cart') || '[]');

        // Check if product is already in cart, if yes, increase quantity
        let isExist = false;
        for (let i = 0; i < cart.length; i++) {
            if (cart[i].id == Itemid) {
                cart[i].quantity = parseInt(cart[i].quantity) + parseInt(Quantity);
                isExist = true;
                break;
            }
        }

        // If not, add new product to cart
        if (!isExist) {
            cart.push({ id: Itemid, quantity: Quantity });
        }

        // Update cart in localStorage
        localStorage.setItem('cart', JSON.stringify(cart));

        // Display success message
        $('#successNotificationtext').text('Thêm sản phẩm vào giỏ hàng thành công!')
        $('#successNotificationModal').css('display', '');

        // Display cart count
        $('#cart-count').text(cart.length);
        $('#cart-count').show();
    }
</script>